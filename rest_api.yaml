openapi: 3.0.0
info:
  title: Hockey Scheduling System API
  version: 1.0.0
paths:
  /organizations:
    get:
      summary: Retrieve all organizations
      responses:
        '200':
          description: A list of organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
    post:
      summary: Create a new organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrganization'
      responses:
        '201':
          description: The created organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'

  /organizations/{id}:
    get:
      summary: Retrieve an organization by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    put:
      summary: Update an organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: The updated organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    delete:
      summary: Delete an organization
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Organization deleted

  /facilities:
    get:
      summary: Retrieve all facilities
      responses:
        '200':
          description: A list of facilities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facility'
    post:
      summary: Create a new facility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewFacility'
      responses:
        '201':
          description: The created facility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'

  /facilities/{id}:
    get:
      summary: Retrieve a facility by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The facility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'
    put:
      summary: Update a facility
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Facility'
      responses:
        '200':
          description: The updated facility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'
    delete:
      summary: Delete a facility
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Facility deleted

  /leagues:
    get:
      summary: Retrieve all leagues
      responses:
        '200':
          description: A list of leagues
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/League'
    post:
      summary: Create a new league
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLeague'
      responses:
        '201':
          description: The created league
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'

  /league/{id}:
    get:
      summary: Retrieve a league by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The league
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
    put:
      summary: Update a league
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
      responses:
        '200':
          description: The updated league
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
    delete:
      summary: Delete a league
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: League deleted

  /teams:
    get:
      summary: Retrieve all teams
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTeam'
      responses:
        '201':
          description: The created team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{id}:
    get:
      summary: Retrieve a team by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      summary: Update a team
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: The updated team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      summary: Delete a team
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Team deleted

  /players:
    get:
      summary: Retrieve all players
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
    post:
      summary: Create a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlayer'
      responses:
        '201':
          description: The created player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /players/{id}:
    get:
      summary: Retrieve a player by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    put:
      summary: Update a player
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          description: The updated player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    delete:
      summary: Delete a player
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Player deleted

components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        contact_name:
          type: string
        contact_email:
          type: string
        contact_phone_number:
          type: string
      required:
        - name

    NewOrganization:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        contact_name:
          type: string
        contact_email:
          type: string
        contact_phone_number:
          type: string
      required:
        - name

    Facility:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        address:
          type: string
        phone_number:
          type: string
        contact_name:
          type: string
        contact_email:
          type: string
        contact_phone_number:
          type: string
      required:
        - name

    NewFacility:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        address:
          type: string
        phone_number:
          type: string
        contact_name:
          type: string
        contact_email:
          type: string
        contact_phone_number:
          type: string
      required:
        - name

    League:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        contact_name:
          type: string
        contact_email:
          type: string
        contact_phone_number:
          type: string
      required:
        - name

    NewLeague:
      type: object
      properties:
        name:
          type: string
        contact_name:
          type: string
        contact_email:
          type: string
        contact_phone_number:
          type: string
      required:
        - name

    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        captain_name:
          type: string
        captain_email:
          type: string
        captain_phone_number:
          type: string
      required:
        - name

    NewTeam:
      type: object
      properties:
        name:
          type: string
        captain_name:
          type: string
        captain_email:
          type: string
        captain_phone_number:
          type: string
      required:
        - name

    Player:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
      required:
        - name

    NewPlayer:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
      required:
        - name

